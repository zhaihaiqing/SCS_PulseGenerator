
/********************************************************************
*
*	文件	：	USART1.h

*	管脚	：	
				PA9--USART1_TX
				PA10-USART1_RX

*	功能	：	串口通信
*
******************************************************************************/
#ifndef _USART1_H
#define _USART1_H
#include  "main.h"

#define USART1_REC_LEN		300						//单通道最大33字节
#define USART1_SEND_LEN		20
//#define USART1_PCLK			72
#define USART1_BAUD			9600
#define USART1_RecOverTime	(2400*16/USART1_BAUD+1)	//16ms是波特率2400时计算所得接收超时，可作为基准

__packed typedef struct
{
	u16 Rflag;										//接收标志【bit15--接收完成  bit14--接收到第一个字节  bit5~0--接收到有效字节数目】
	u8 Rtbl[USART1_REC_LEN];						//接收数组
	u8 Ttbl[USART1_SEND_LEN];						//发送数组
}sUART1_t;
extern sUART1_t U1;

#define EN_USART1_RX	1

void Uart1_Init(u32 bound);
void Uart1_Tx(u8 *buf,u8 len);

#endif

/*********************************************************************************************
3.5个字符时间区分不同的帧，即接收到的两个字符之间时间间隔小于3.5个字符时间时认为是同一个帧的，间隔大于3.5个字符时间则认为是不同帧的.
在一般的串口通信中，发送1个字符需要：1位起始位，8位数据位，1位校验位(可无),1位停止位,总共 1+8+1+1 = 11位，3.5个字符时间就是 3.5 * 11 = 38.5位，
假如波特率是9600,那么传输1位的时间是1000/9600 = 0.10416667(ms) ,这样，3.5个字符时间就大约是4 ms ,即定时器需要的中断时间
***********************************************************************************************************************************************************/
